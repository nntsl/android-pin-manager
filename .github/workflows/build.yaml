name: Build

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: [ ubuntu-latest ]
    timeout-minutes: 60
    steps:
      - name: Fetch sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run local tests
        run: ./gradlew test

      - name: Upload local tests reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-local
          path: ./**/build/reports
        if: always()

      - name: Print local tests report
        uses: asadmansr/android-test-report-action@v1.2.0

  androidTest:
    needs: build
    runs-on: macos-latest
    timeout-minutes: 60
    strategy:
      matrix:
        api-level: [ 26, 29 ]
        target: [default, google_apis]

    steps:
      - name: Fetch sources
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          script: ./gradlew connectedCheck

      - name: Upload instrumentation test reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-${{ matrix.api-level }}-${{ matrix.target }}
          path: ./**/build/reports/androidTests
        if: always()

  reportAndroidTest:
    runs-on: ubuntu-latest
    needs: androidTest
    if: ${{ always() }}
    strategy:
      matrix:
        api-level: [ 26, 29 ]
        target: [ default, google_apis ]
    steps:
      - name: Download instrumentation test reports folder
        uses: actions/download-artifact@v2
        with:
          name: test-reports-${{ matrix.api-level }}-${{ matrix.target }}

      - name: Print instrumentation tests report
        uses: asadmansr/android-test-report-action@v1.2.0
